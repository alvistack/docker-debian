{
  "builders": [
    {
      "changes": [
        "ENV LANG=en_US.UTF-8",
        "ENV LC_ALL=en_US.UTF-8",
        "ENV SHELL=/bin/bash",
        "ENV TZ=UTC",
        "VOLUME /root",
        "WORKDIR /root",
        "EXPOSE 22",
        "ENTRYPOINT [\"catatonit\", \"-g\", \"--\", \"docker-entrypoint.sh\"]",
        "CMD [\"/usr/sbin/sshd\", \"-eD\"]"
      ],
      "commit": true,
      "image": "debian:bookworm",
      "privileged": true,
      "type": "docker"
    }
  ],
  "post-processors": [
    {
      "inline": [
        "set -eu",
        "export _ID=$(docker images | awk '{ print $3 }' | awk 'NR==2')",
        "mkdir -p output-docker",
        "docker save $_ID | gzip -9 > output-docker/image.tar.gz"
      ],
      "type": "shell-local"
    }
  ],
  "provisioners": [
    {
      "inline": [
        "set -eu",
        "rm -rf /etc/apt/sources.list*",
        "mkdir -p /etc/apt/sources.list.d",
        "printf \"Components: main contrib non-free non-free-firmware\nEnabled: yes\nX-Repolib-Name: debian\nSigned-By: /usr/share/keyrings/debian-archive-keyring.gpg\nSuites: bookworm bookworm-updates\nTypes: deb\nURIs: http://deb.debian.org/debian\n\" | tee /etc/apt/sources.list.d/debian.sources > /dev/null",
        "printf \"Components: main contrib non-free non-free-firmware\nEnabled: yes\nX-Repolib-Name: debian-security\nSigned-By: /usr/share/keyrings/debian-archive-keyring.gpg\nSuites: bookworm-security\nTypes: deb\nURIs: http://deb.debian.org/debian-security\n\" | tee /etc/apt/sources.list.d/debian-security.sources > /dev/null"
      ],
      "type": "shell"
    },
    {
      "inline": [
        "set -eu",
        "apt-get update",
        "DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y",
        "DEBIAN_FRONTEND=noninteractive apt-get install -y ca-certificates curl gcc hostname iproute2 locales locales-all python3 sudo"
      ],
      "type": "shell"
    },
    {
      "galaxy_file": "./ansible-galaxy-requirements.yml",
      "inventory_directory": "./",
      "playbook_file": "./packer.yml",
      "type": "ansible",
      "user": "root"
    },
    {
      "inline": [
        "set -eu",
        "rm -rf /etc/ssh/ssh_host_*"
      ],
      "type": "shell"
    }
  ]
}

